# Resources for the TransactionMonitorView class
# https://sql.ares-system.nazwa.pl/mysql5/
# https://sql.ares-system.nazwa.pl/psql83/

# Struktura tabel w bazach:
# CREATE TABLE `pensja` (
#   `pen_id` int(11) NOT NULL auto_increment,
#   `pen_prc_id` int(11) default NULL,
#   `pen_kwota` float default NULL,
#   PRIMARY KEY  (`pen_id`)
# )
# CREATE TABLE `pracownicy` (
#   `prc_id` int(11) NOT NULL auto_increment,
#   `prc_imie` varchar(100) default NULL,
#   `prc_nazwisko` varchar(100) default NULL,
#   `prc_pen_id` int(11) default NULL,
#   PRIMARY KEY  (`prc_id`)
# )


# Baza1 MySQL 5
String driver1 = "com.mysql.jdbc.Driver";
String url1 = "jdbc:mysql://sql.ares-system.nazwa.pl:3305/ares-system_6";
String user1 = "ares-system_6";
String password1 = "TEsttest1";
# Przyk\u0142ad nawi\u0105zania po\u0142\u0105czenia
# Class.forName(driver1);
# Connection conn = DriverManager.getConnection(url1, user1, password1);

# Baza2 MySQL 5
String driver2 = "com.mysql.jdbc.Driver";
String url2 = "jdbc:mysql://sql.ares-system.nazwa.pl:3305/ares-system_7";
String user2 = "ares-system_7";
String password2 = "TEsttest1";

# Baza3 PostgreSQL 8.3
String driver3 = "org.postgresql.Driver";
String url3 = "jdbc:postgresql://sql.ares-system.nazwa.pl:5433/ares-system_8";
String user3 = "ares-system_8";
String password3 = "TEsttest1";

# Przyk\u0142ad u\u017Cycia protoko\u0142u XOpen/XA

# XA start 'trans_id';
# insert into pracownicy (prc_imie) values ("Stefan");
# XA end 'trans_id';

# je\u015Bli chcemy potwierdzi\u0107 zmiany to:
# XA prepare 'trans_id';
# XA commit 'trans_id';

# je\u015Bli chcemy cofn\u0105\u0107 zminay:
# XA prepare 'trans_id';
# XA rollback 'trans_id';

#        LOCKOWANIE MySQL

#        String driver1 = "com.mysql.jdbc.Driver";
#        String url1 = "jdbc:mysql://sql.ares-system.nazwa.pl:3305/ares-system_6";
#        String user1 = "ares-system_6";
#        String password1 = "TEsttest1";
#
#        ResultSet rs = null;
#        try {
#            Class.forName(driver1);
#        } catch (ClassNotFoundException ex) {
#            Logger.getLogger(TransactionMonitorApp.class.getName()).log(Level.SEVERE, null, ex);
#        }
#        Connection conn, conn2;
#        try {
#            conn = DriverManager.getConnection(url1, user1, password1);
#            Statement statement;
#            statement = conn.createStatement();
#
#            statement.executeUpdate("LOCK TABLES pracownicy WRITE");            
#
#            statement.executeUpdate("INSERT into pracownicy (prc_imie, prc_nazwisko) values ('before', 'LOCK');");
#
#           //   Test LOCKA
#           // conn2 = DriverManager.getConnection(url1, user1, password1);
#           // Statement statement2;
#           // statement2 = conn2.createStatement();
#           // dupa = statement2.executeUpdate("INSERT into pracownicy (prc_imie, prc_nazwisko) values ('after', 'LOCK');");
#
#        } catch (SQLException ex) {
#            Logger.getLogger(TransactionMonitorApp.class.getName()).log(Level.SEVERE, null, ex);
#        }
#
#
#        /*
#          catch(SQLException ex) {
#            System.out.println("SQL Exception" + ex.getMessage() );
#            throw new SQLException(ex.getMessage() ,ex.getSQLState() );
#            }
#            finally{
#            Statement statement = connection.createStatement();
#            statement.executeUpdate("UNLOCK TABLES");
#            statement.close();
#            }
#
#         */

#        LOCKOWANIE PostgreSQL

#        String driver1 = "org.postgresql.Driver";
#        String url1 = "jdbc:postgresql://sql.ares-system.nazwa.pl:5433/ares-system_8";
#        String user1 = "ares-system_8";
#        String password1 = "TEsttest1";
#
#
#        Connection conn, conn2;
#
#            Class.forName(driver1);
#            conn = DriverManager.getConnection(url1, user1, password1);
#            Statement statement;
#            statement = conn.createStatement();
#
#            statement.executeUpdate("INSERT into pracownicy (prc_imie, prc_nazwisko) values ('iwan', 'gozny');");
#
#            statement.executeUpdate("LOCK TABLE pracownicy");
#
#            statement.executeUpdate("INSERT into adres (nazwisko, ulica) values ( 'gozny', 'moskiewska');");
#
#           //   Test LOCKA
#           // conn2 = DriverManager.getConnection(url1, user1, password1);
#           // Statement statement2;
#           // statement2 = conn2.createStatement();
#           // statement2.executeUpdate("INSERT into pracownicy (prc_imie, prc_nazwisko) values ('after', 'LOCK');");